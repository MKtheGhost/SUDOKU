Imports System.IO
Imports System.Windows.Forms.VisualStyles.VisualStyleElement

Public Class Form1
    Dim playerList As joeur() = getTabJoeur()

    Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load

        playerCB.Items.AddRange()
        NameLabel.ForeColor = Color.FromArgb(255, 114, 228)
        playerCB.ForeColor = Color.White
        playerCB.Text = ""

        nameLB.Hide()
        scoreLB.Hide()
        searchPlayerCB.Hide()
        showStatsBtn.Hide()

    End Sub

    Private Sub quitGame_Click(sender As Object, e As EventArgs) Handles quitGameBtn.Click
        'Me.Hide()
        QuitGameMsgBox.Show()
    End Sub

    Private Function estValide() As Boolean
        If Not String.IsNullOrWhiteSpace(newNameTBox.Text) Then
            Return True
        Else
            Return False
        End If

    End Function

    Private Sub addName_Click(sender As Object, e As EventArgs) Handles addNameBtn.Click
        If estValide() Then ' Verifie si le text es valide
            If Not Existent(newNameTBox.Text) Then 'verifie se le nickname existe ou pas
                Dim j As joeur
                j.nickName = newNameTBox.Text
                j.playTime = TimeSpan.FromMinutes(0)
                j.bestTime = TimeSpan.FromMinutes(0)
                AjouterJoeur(j)
                playerCB.Text = newNameTBox.Text
                playerCB.Items.Add(newNameTBox.Text)
            Else
                MsgBox("Existing player")
            End If
        Else
            MsgBox("Try again")
        End If
    End Sub

    Private Sub NewGameBtn_Click(sender As Object, e As EventArgs) Handles NewGameBtn.Click
        If playerCB.Text = "" Then
            NameLabel.ForeColor = Color.Red
            playerCB.ForeColor = Color.Red
            playerCB.Text = "Enter name"
        Else
            Form1_Load(sender, e)
            NewGame(playerCB)
            Me.Hide()
            Sudoku3X3.Show()
        End If
    End Sub

    Private Sub playerCB_SelectedIndexChanged(sender As Object, e As EventArgs) Handles playerCB.SelectedIndexChanged
        playerCB.ForeColor = Color.White

    End Sub





    Private Sub scoreBtn_Click(sender As Object, e As EventArgs) Handles scoreBtn.Click
        homeBtn.FlatAppearance.BorderSize = 0
        scoreBtn.FlatAppearance.BorderSize = 1

        nameLB.Show()
        scoreLB.Show()
        searchPlayerCB.Show()
        showStatsBtn.Show()

        sudokuTitle.Hide()
        NameLabel.Hide()
        playerCB.Hide()
        newPlayerLabel.Hide()
        newNameTBox.Hide()
        addNameBtn.Hide()
        NewGameBtn.Hide()
    End Sub

    Private Sub homeBtn_Click(sender As Object, e As EventArgs) Handles homeBtn.Click
        homeBtn.FlatAppearance.BorderSize = 1
        scoreBtn.FlatAppearance.BorderSize = 0
        sudokuTitle.Show()
        NameLabel.Show()
        playerCB.Show()
        newPlayerLabel.Show()
        newNameTBox.Show()
        addNameBtn.Show()
        NewGameBtn.Show()

        nameLB.Hide()
        scoreLB.Hide()
        searchPlayerCB.Hide()
        showStatsBtn.Hide()
    End Sub

    Private Sub showStatsBtn_Click(sender As Object, e As EventArgs) Handles showStatsBtn.Click
        Me.Hide()
        stats.Show()
    End Sub
End Class

--------------------------------------------------------------------------------------------------------------------------

Imports System.IO

Module Module1

    Public tab As joeur()
    Private cpt As Integer = 0
    Public loggedPlayer As Integer


    Public Structure joeur
        Dim nickName As String
        Dim bestTime As TimeSpan
        Dim playTime As TimeSpan
        Dim nombreParties As Integer
    End Structure

    Public Function Existent(nickName As String) As Boolean
        For i As Integer = 0 To cpt < i
            If tab(i).nickName = nickName Then
                Return True
            End If
        Next
        Return False
    End Function

    Public Sub AjouterJoeur(j As joeur)
        'redim si plein
        If tab.Length = cpt Then
            ReDim tab(cpt + 2)
        Else
            tab(cpt) = j
            cpt += 1
        End If
    End Sub


    Public Sub NewGame(playerCB As ComboBox)
        For i As Integer = 0 To cpt < i
            If tab(i).nickName = playerCB.Text Then
                loggedPlayer = i
            Else
                'player n'est pas dans la base
            End If
        Next
    End Sub

    'enregistrer les stats de jeu
    Public Sub EnregistrerStats(tempsEnregistre As TimeSpan)
        'Dim score As integer = tempsEnregistre.TotalMinutes
        Dim tmp As TimeSpan = TAB(loggedPlayer).bestTime
        If tempsEnregistre < tmp Then
            tab(loggedPlayer).bestTime = tempsEnregistre
        End If
        tab(loggedPlayer).playTime += tempsEnregistre
    End Sub

    Public Sub RemplirTablleJoeur()
        Dim listPlayer = File.ReadAllLines("..\..\playerName.txt")
        Dim listPlayerTime = File.ReadAllLines("..\..\playerTime.txt")
        For i = 0 To listPlayer.Length
            tab(i).nickName = listPlayer(i)
            tab(i).playTime = listPlayerTime(i)
        Next
    End Sub

    Public Function getTabJoeur() As joeur()
        Return tab
    End Function

    Public Sub UpdateDonnees()

    End Sub


    Public Sub main()
        'preparation des donnÃ©es
        RemplirTablleJoeur(fichier.txt)
        ReDim tab(0)

        'lancement interactions utilisateur
        Application.Run(Form1)



        'enregistrer donnes
        UpdateDonnees(tab)

        Application.Exit()
    End Sub
End Module
